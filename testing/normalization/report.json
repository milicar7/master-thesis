{
  "statistics": {
    "total_tables": 1,
    "total_columns": 10,
    "total_foreign_keys": 0,
    "tables_with_primary_key": 1,
    "primary_key_coverage": "100.0%",
    "data_type_distribution": {
      "VARCHAR": 9,
      "INTEGER": 1
    },
    "normalization_suggestions_count": 8,
    "normalization_suggestions_by_type": {
      "1NF": 1,
      "2NF": 5,
      "3NF": 2
    }
  },
  "file_metadata": {
    "/Users/milica/Desktop/master-thesis/testing/normalization/test_data_complex_normalization.csv": {
      "file_path": "/Users/milica/Desktop/master-thesis/testing/normalization/test_data_complex_normalization.csv",
      "sample_method": "sequential",
      "encoding": "utf-8",
      "delimiter": ","
    }
  },
  "tables": {
    "test_data_complex_normalization": {
      "name": "test_data_complex_normalization",
      "row_count": 12,
      "column_count": 10,
      "primary_key": [
        "StudentID",
        "CourseID"
      ],
      "foreign_key_count": 0,
      "columns": [
        {
          "name": "StudentID",
          "data_type": "VARCHAR",
          "nullable": false,
          "max_length": 8,
          "statistics": {
            "unique_ratio": "41.7%",
            "null_count": 0,
            "distinct_count": 5
          }
        },
        {
          "name": "CourseID",
          "data_type": "VARCHAR",
          "nullable": false,
          "max_length": 14,
          "statistics": {
            "unique_ratio": "33.3%",
            "null_count": 0,
            "distinct_count": 4
          }
        },
        {
          "name": "StudentName",
          "data_type": "VARCHAR",
          "nullable": false,
          "max_length": 26,
          "statistics": {
            "unique_ratio": "41.7%",
            "null_count": 0,
            "distinct_count": 5
          }
        },
        {
          "name": "CourseName",
          "data_type": "VARCHAR",
          "nullable": false,
          "max_length": 54,
          "statistics": {
            "unique_ratio": "33.3%",
            "null_count": 0,
            "distinct_count": 4
          }
        },
        {
          "name": "Instructor",
          "data_type": "VARCHAR",
          "nullable": false,
          "max_length": 26,
          "statistics": {
            "unique_ratio": "25.0%",
            "null_count": 0,
            "distinct_count": 3
          }
        },
        {
          "name": "Prerequisites",
          "data_type": "VARCHAR",
          "nullable": false,
          "max_length": 26,
          "statistics": {
            "unique_ratio": "25.0%",
            "null_count": 0,
            "distinct_count": 3
          }
        },
        {
          "name": "Credits",
          "data_type": "INTEGER",
          "nullable": false,
          "max_length": null,
          "statistics": {
            "unique_ratio": "16.7%",
            "null_count": 0,
            "distinct_count": 2
          }
        },
        {
          "name": "ProjectTopic",
          "data_type": "VARCHAR",
          "nullable": false,
          "max_length": 36,
          "statistics": {
            "unique_ratio": "33.3%",
            "null_count": 0,
            "distinct_count": 4
          }
        },
        {
          "name": "ProjectSupervisor",
          "data_type": "VARCHAR",
          "nullable": false,
          "max_length": 20,
          "statistics": {
            "unique_ratio": "50.0%",
            "null_count": 0,
            "distinct_count": 6
          }
        },
        {
          "name": "SupervisorOffice",
          "data_type": "VARCHAR",
          "nullable": false,
          "max_length": 16,
          "statistics": {
            "unique_ratio": "50.0%",
            "null_count": 0,
            "distinct_count": 6
          }
        }
      ],
      "foreign_keys": []
    }
  },
  "normalization_suggestions": [
    {
      "table_name": "test_data_complex_normalization",
      "suggestion_type": "1NF",
      "description": "Column 'Prerequisites' contains multi-valued data in 16.7% of rows. Consider splitting into separate columns or creating a separate 'Prerequisites_values' table.",
      "confidence": "16.7%"
    },
    {
      "table_name": "test_data_complex_normalization",
      "suggestion_type": "2NF",
      "description": "[After 1NF fixes] Column 'StudentName' has partial dependency on 'StudentID' (part of composite key ['StudentID', 'CourseID']) instead of depending on the full key (strength: 100.0%). Consider extracting to a separate 'students' table with columns: StudentID, StudentName.",
      "confidence": "100.0%"
    },
    {
      "table_name": "test_data_complex_normalization",
      "suggestion_type": "2NF",
      "description": "[After 1NF fixes] Column 'CourseName' has partial dependency on 'CourseID' (part of composite key ['StudentID', 'CourseID']) instead of depending on the full key (strength: 100.0%). Consider extracting to a separate 'courses' table with columns: CourseID, CourseName.",
      "confidence": "100.0%"
    },
    {
      "table_name": "test_data_complex_normalization",
      "suggestion_type": "2NF",
      "description": "[After 1NF fixes] Column 'Instructor' has partial dependency on 'CourseID' (part of composite key ['StudentID', 'CourseID']) instead of depending on the full key (strength: 100.0%). Consider extracting to a separate 'course_instructor' table with columns: CourseID, Instructor.",
      "confidence": "100.0%"
    },
    {
      "table_name": "test_data_complex_normalization",
      "suggestion_type": "2NF",
      "description": "[After 1NF fixes] Column 'Credits' has partial dependency on 'CourseID' (part of composite key ['StudentID', 'CourseID']) instead of depending on the full key (strength: 100.0%). Consider extracting to a separate 'course_credits' table with columns: CourseID, Credits.",
      "confidence": "100.0%"
    },
    {
      "table_name": "test_data_complex_normalization",
      "suggestion_type": "2NF",
      "description": "[After 1NF fixes] Column 'ProjectTopic' has partial dependency on 'CourseID' (part of composite key ['StudentID', 'CourseID']) instead of depending on the full key (strength: 100.0%). Consider extracting to a separate 'course_projecttopic' table with columns: CourseID, ProjectTopic.",
      "confidence": "100.0%"
    },
    {
      "table_name": "test_data_complex_normalization",
      "suggestion_type": "3NF",
      "description": "[After 1NF & 2NF fixes] Transitive dependency detected: SupervisorOffice depends on ProjectSupervisor, creating transitive dependency through primary key. Consider extracting to a separate 'projectsupervisor_details' table with columns: ProjectSupervisor, SupervisorOffice.",
      "confidence": "98.6%"
    },
    {
      "table_name": "test_data_complex_normalization",
      "suggestion_type": "3NF",
      "description": "[After 1NF & 2NF fixes] Transitive dependency detected: ProjectSupervisor depends on SupervisorOffice, creating transitive dependency through primary key. Consider extracting to a separate 'supervisoroffice_details' table with columns: SupervisorOffice, ProjectSupervisor.",
      "confidence": "98.6%"
    }
  ]
}